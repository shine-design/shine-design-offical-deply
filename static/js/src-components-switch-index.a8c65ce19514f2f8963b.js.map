{"version":3,"sources":["webpack:///./src/components/Switch/demo/index.scss","webpack:///./src/components/Switch/demo/index.js","webpack:///./src/components/Switch/demo/index.scss?1b40","webpack:///./src/components/Switch/index.mdx"],"names":["module","exports","push","i","components","Switch","Form","Row","Col","basic","jsx","state","size","content","options","transform","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","MDXContent","props","layout","React","Component","this","MDXTag","name","MessageBox","messageType","InlineCode","Example","display","code","PropsTable","of"],"mappings":"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","file":"static/js/src-components-switch-index.2b953034.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n\n","/**\n *\n * @Author 瞿龙俊 - qulongjun@shine.design\n * @Date 2019-05-02 22:08\n */\nimport {Col, Form, Row, Switch} from \"shineDev\";\n\nconst components = {Switch, Form, Row, Col};\n\nexport default {\n  basic: {\n    components,\n    jsx:\n      `<div className=\"shine-switch-helper\">\n  <Form>\n    <Row>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"默认关闭\">\n          <Switch />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"默认打开\">\n          <Switch isChecked={true} />\n        </Form.Item>\n      </Col>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"带图标关闭\">\n          <Switch isShowIcon={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"带图标打开\">\n          <Switch isChecked={true} isShowIcon={true} />\n        </Form.Item>\n      </Col>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"禁用开启\">\n          <Switch isDisabled={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"禁用关闭\">\n          <Switch isChecked={true} isShowIcon={true} isDisabled={true} />\n        </Form.Item>\n      </Col>\n    </Row>  \n  </Form>\n</div>`,\n  },\n  state: {\n    components,\n    jsx:\n      `<div className=\"shine-switch-helper\">\n  <Form>\n    <Row>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"Default\">\n          <Switch isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Brand\">\n          <Switch bgColor=\"brand\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Metal\">\n          <Switch bgColor=\"metal\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Light\">\n          <Switch bgColor=\"light\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n      </Col>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"Accent\">\n          <Switch bgColor=\"accent\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Focus\">\n          <Switch bgColor=\"focus\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Primary\">\n          <Switch bgColor=\"primary\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Success\">\n          <Switch bgColor=\"success\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n      </Col>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"Info\">\n          <Switch bgColor=\"info\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Warning\">\n          <Switch bgColor=\"warning\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Danger\">\n          <Switch bgColor=\"danger\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n      </Col>\n    </Row>  \n    <hr />\n    <Row>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"Default\">\n          <Switch isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Brand\">\n          <Switch outlineColor=\"brand\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Metal\">\n          <Switch outlineColor=\"metal\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Light\">\n          <Switch outlineColor=\"light\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n      </Col>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"Accent\">\n          <Switch outlineColor=\"accent\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Focus\">\n          <Switch outlineColor=\"focus\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Primary\">\n          <Switch outlineColor=\"primary\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Success\">\n          <Switch outlineColor=\"success\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n      </Col>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"Info\">\n          <Switch outlineColor=\"info\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Warning\">\n          <Switch outlineColor=\"warning\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n        <Form.Item isInline={true} labelCol={8} label=\"Danger\">\n          <Switch outlineColor=\"danger\" isShowIcon={true} isChecked={true} />\n        </Form.Item>\n      </Col>\n    </Row>  \n  </Form>\n</div>`,\n  },\n  size: {\n    components,\n    jsx:\n      `<div className=\"shine-switch-helper\">\n  <Form>\n    <Row>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"默认打开\">\n          <Switch isChecked={true} size=\"small\" isShowIcon={true} />\n        </Form.Item>\n      </Col>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"默认打开\">\n          <Switch isChecked={true} isShowIcon={true} />\n        </Form.Item>\n      </Col>\n      <Col col={8}>\n        <Form.Item isInline={true} labelCol={8} label=\"默认打开\">\n          <Switch isChecked={true} size=\"large\" isShowIcon={true} />\n        </Form.Item>\n      </Col>\n    </Row>  \n  </Form>\n</div>`,\n  },\n};\n\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./index.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./index.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./index.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import JsxParser from \"react-jsx-parser\";\nimport {\n  MessageBox,\n  InlineCode,\n  Example,\n  Code,\n  PropsTable\n} from \"theme\";\nimport {Switch} from 'shineDev';\nimport code from \"./demo\";\nimport \"./demo/index.scss\";\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"switch-开关\"}}>{`Switch 开关`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"概述\"}}>{`概述`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`开关是一类特殊的单选框组件。该组件仅有两个相互对立的状态——开/关，用户可以通过移动滑块方式实现状态切换，通常用于表单中的配置项。`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"代码示例\"}}>{`代码示例`}</MDXTag>\n<MessageBox messageType=\"info\">\n  为了让用户直观地查看代码演示，我们加入了{\" \"}\n  <InlineCode>shine-switch-helper</InlineCode>{\" \"}\n  修饰符，在开发过程中无需配置该字段。\n</MessageBox>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"基础开关\"}}>{`基础开关`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`最基础的用法，支持默认状态为开（或关），支持禁用。`}</MDXTag>\n<Example \n  display={<JsxParser {...code.basic} />}\n  code={{code:code.basic.jsx}}\n  components={code.basic.components}\n/>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"带状态的开关\"}}>{`带状态的开关`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`使用背景带有状态颜色的开关或滑块可以给用户产生更直观的视觉体验。`}</MDXTag>\n<Example \n  display={<JsxParser {...code.state} />}\n  code={{code:code.state.jsx}}\n  components={code.state.components}\n/>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"尺寸\"}}>{`尺寸`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`开关组件支持三种不同的尺寸。`}</MDXTag>\n<Example \n  display={<JsxParser {...code.size} />}\n  code={{code:code.size.jsx}}\n  components={code.size.components}\n/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"配置参数\"}}>{`配置参数`}</MDXTag>\n<PropsTable of={Switch} />\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}